# Do not use this configuration in production.
# It is for demonstration purposes only.
multitenancy_enabled: false

common:
  storage:
    backend: s3
    s3:
      endpoint: s3.us-east-2.amazonaws.com
      region: us-east-2
      secret_access_key: "${AWS_SECRET_ACCESS_KEY}" # This is a secret injected via an environment variable
      access_key_id: "${AWS_ACCESS_KEY_ID}" # This is a secret injected via an environment variable

blocks_storage:
  s3:
    bucket_name: "samm-${SAMM_CUSTOMER}-mimir-blocks"

alertmanager_storage:
  s3:
    bucket_name: "samm-${SAMM_CUSTOMER}-mimir-alertmanager"

ruler_storage:
  s3:
    bucket_name: "samm-${SAMM_CUSTOMER}-mimir-ruler"


#blocks_storage:
#  backend: filesystem
#  bucket_store:
#    sync_dir: /tmp/mimir/tsdb-sync
#  filesystem:
#    dir: /tmp/mimir/data/tsdb
#  tsdb:
#    dir: /tmp/mimir/tsdb

compactor:
  data_dir: /tmp/mimir/compactor
  sharding_ring:
    kvstore:
      store: memberlist

distributor:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist

ingester:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist
    replication_factor: 1

ruler_storage:
  backend: filesystem
  filesystem:
    dir: /tmp/mimir/rules

server:
  http_listen_port: 9009
  log_level: error

store_gateway:
  sharding_ring:
    replication_factor: 1
